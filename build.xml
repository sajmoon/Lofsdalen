<?xml version="1.0" encoding="utf-8"?>
<project name="Lofsdalen" default=".help">
    <!--
    The build-impl.xml file imported here contains the guts of the build process. It is
    a great idea to read that file to understand how the process works, but it is best to
    limit your changes to this file.
    -->
    <import file="${basedir}/.sencha/app/phonegap-impl.xml"/>
    <import file="${basedir}/.sencha/app/build-impl.xml"/>

    <!--
    The following targets can be provided to inject logic before and/or after key steps
    of the build process:

        The "init-local" target is used to initialize properties that may be personalized
        for the local machine.

            <target name="-before-init-local"/>
            <target name="-after-init-local"/>

        The "clean" target is used to clean build output from the build.dir.

            <target name="-before-clean"/>
            <target name="-after-clean"/>

        The general "init" target is used to initialize all other properties, including
        those provided by Sencha Cmd.

            <target name="-before-init"/>
            <target name="-after-init"/>
            
        The "page" target performs the call to Sencha Cmd to build the 'all-classes.js' file.

            <target name="-before-page"/>
            <target name="-after-page"/>

        The "build" target performs the call to Sencha Cmd to build the application.

            <target name="-before-build"/>
            <target name="-after-build"/>
    -->
    
    <!-- Specify preprocessor options -->
    <!--
    <target name="-before-init">
        <property name="build.options.production.debug" value="debug:false"/>
        <property name="build.options.production.logger" value="logger:true"/>
        <property name="build.options.production.minVersion" value="minVersion:3"/>
        <property name="build.options.production.product" value="product:touch"/>
        
        <property name="build.options.testing.debug" value="debug:false"/>
        <property name="build.options.testing.logger" value="logger:true"/>
        <property name="build.options.testing.minVersion" value="minVersion:3"/>
        <property name="build.options.testing.product" value="product:touch"/>
        
        <property name="build.options.package.debug" value="debug:false"/>
        <property name="build.options.package.logger" value="logger:true"/>
        <property name="build.options.package.minVersion" value="minVersion:3"/>
        <property name="build.options.package.product" value="product:touch"/>
        
        <property name="build.options.native.debug" value="debug:false"/>
        <property name="build.options.native.logger" value="logger:true"/>
        <property name="build.options.native.minVersion" value="minVersion:3"/>
        <property name="build.options.native.product" value="product:touch"/>
    </target>
    -->

    <!-- Copy all web files to phonegap dir -->
    <target name="-after-build">
        <copy todir="${app.phonegap.www.dir}" overwrite="true">
          <fileset dir="${build.dir}">
            <include name="**/*" />
          </fileset>
        </copy>
        <echo message="Afterbuild done!"/>
        <echo message="This is error message." level="warning" />

        <property name="project.tmp" value="${basedir}/"/>
        <property name="project.zip" value="www.zip"/>

        <echo level="warning">Packaging project into zip file!</echo>
        <zip destfile="${project.tmp}/${project.zip}" basedir="${app.phonegap.www.dir}"/>

        <property name="project.id" value="1014039" />
        <property name="user.token" value="XtbmZPgzCg9k1WAxPjHE" />
        <property name="api.urlprefix" value="https://build.phonegap.com/api/v1/apps/${project.id}" />
        <property name="api.urlsuffix" value="?auth_token=${user.token}" />
        <property name="api.uploadurl" value="${api.urlprefix}${api.urlsuffix}" />
        <property name="api.buildurl" value="${api.urlprefix}/build${api.urlsuffix}" />
        <property name="api.zipfile" value="${project.tmp}${project.zip}" />


        <sequential>
            <!-- Upload -->
            <echo level="error" message="${api.zipfile}" />

            <exec executable='curl' failonerror='true'>
                <arg value='-X'/>
                <arg value='PUT'/>
                <arg value='-F'/>
                <arg value='file=@${api.zipfile}'/>   
                <arg value='${api.urlprefix}${api.urlsuffix}'/>   
            </exec>
            <echo level="error" message="${api.uploadurl}" />

            <!-- <property name="build.environment" value="testing"/> -->
            <!-- Trigger build -->
            <exec executable="curl" failonerror="true">
                <arg value='-X'/>
                <arg value='POST'/>
                <arg value="-d" />
                <arg value="''" />
                <arg value="${api.urlprefix}/build${api.urlsuffix}" />
            </exec>
            <echo level="error" message="${api.buildurl}" />

        </sequential>
    </target>
</project>
